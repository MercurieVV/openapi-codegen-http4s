{{#jackson}}
    import com.fasterxml.jackson.annotation.JsonCreator;
    import com.fasterxml.jackson.databind.annotation.JsonDeserialize
{{/jackson}}

@JsonDeserialize(using = classOf[EnumeratumDeserializer[{{classname}}]])
sealed trait {{classname}} extends EnumEntry{
@JsonValue override def toString: String = this.getClass.getSimpleName.replace("$", "")
//@JsonCreator override def withName(name: String): {{classname}} = super.withName(name)
}
object {{classname}} extends Enum[{{classname}}] {
val values = findValues
{{#allowableValues}}{{#enumVars}}  case object {{{name}}} extends {{classname}}
{{/enumVars}}{{/allowableValues}}
}

